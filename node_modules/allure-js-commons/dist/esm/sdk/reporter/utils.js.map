{"version":3,"file":"utils.js","names":["readFile","createHash","randomUUID","fs","path","process","properties","LabelName","LinkType","StatusByPriority","randomUuid","md5","str","update","digest","getTestResultHistoryId","result","_result$testCaseId","historyId","tcId","testCaseId","fullName","paramsString","parameters","filter","p","excluded","sort","a","b","_a$name","_a$value","name","localeCompare","value","map","_p$name","_p$value","concat","join","paramsHash","getTestResultTestCaseId","undefined","getWorstStepResultStatusPriority","steps","priority","worstStatusPriority","forEach","step","_step$steps","length","stepStatusPriority","status","indexOf","getWorstStepResultStatus","readImageAsBase64","_ref","_asyncToGenerator","filePath","file","encoding","e","_x","apply","arguments","getProjectRoot","cachedProjectRoot","resolveProjectRootByPath","cwd","nextDir","dir","accessSync","constants","F_OK","_unused","dirname","getRelativePath","filepath","isAbsolute","projectRoot","relative","getPackageLabelFromPath","PACKAGE","split","sep","v","deepClone","obj","JSON","parse","stringify","serialize","val","Map","Set","toString","getSuiteLabels","suites","parentSuite","suite","subSuites","labels","push","PARENT_SUITE","SUITE","SUB_SUITE","suiteLabelNames","ensureSuiteLabels","test","defaultSuites","_test$labels","find","l","includes","_test$labels2","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","replace","parseProperties","stringifyProperties","data","unicode","isUrl","potentialUrl","URL","applyLinkTemplate","template","formatLink","templates","link","url","originalUrl","type","_templates","formattedLink","_objectSpread","urlTemplate","nameTemplate","DEFAULT","formatLinks","links"],"sources":["../../../../src/sdk/reporter/utils.ts"],"sourcesContent":["import { readFile } from \"fs/promises\";\nimport { createHash, randomUUID } from \"node:crypto\";\nimport fs from \"node:fs\";\nimport path from \"node:path\";\nimport process from \"node:process\";\nimport properties from \"properties\";\nimport type { Label, Link, Status, StepResult, TestResult } from \"../../model.js\";\nimport { LabelName, LinkType, StatusByPriority } from \"../../model.js\";\nimport type { LinkConfig, LinkTemplate } from \"./types.js\";\n\nexport const randomUuid = () => {\n  return randomUUID();\n};\n\nexport const md5 = (str: string) => {\n  return createHash(\"md5\").update(str).digest(\"hex\");\n};\n\nexport const getTestResultHistoryId = (result: TestResult) => {\n  if (result.historyId) {\n    return result.historyId;\n  }\n\n  const tcId = result.testCaseId ?? (result.fullName ? md5(result.fullName) : null);\n\n  if (!tcId) {\n    return \"\";\n  }\n\n  const paramsString = result.parameters\n    .filter((p) => !p?.excluded)\n    .sort((a, b) => a.name?.localeCompare(b?.name) || a.value?.localeCompare(b?.value))\n    .map((p) => `${p.name ?? \"null\"}:${p.value ?? \"null\"}`)\n    .join(\",\");\n  const paramsHash = md5(paramsString);\n\n  return `${tcId}:${paramsHash}`;\n};\n\nexport const getTestResultTestCaseId = (result: TestResult) => {\n  return result.fullName ? md5(result.fullName) : undefined;\n};\n\nexport const getWorstStepResultStatusPriority = (steps: StepResult[], priority?: number): number | undefined => {\n  let worstStatusPriority = priority;\n\n  steps.forEach((step) => {\n    if (step.steps?.length) {\n      worstStatusPriority = getWorstStepResultStatusPriority(step.steps, worstStatusPriority);\n    }\n\n    const stepStatusPriority = step.status ? StatusByPriority.indexOf(step.status) : undefined;\n\n    if (stepStatusPriority === undefined) {\n      return;\n    }\n\n    if (worstStatusPriority === undefined) {\n      worstStatusPriority = stepStatusPriority;\n      return;\n    }\n\n    if (stepStatusPriority >= worstStatusPriority) {\n      return;\n    }\n\n    worstStatusPriority = stepStatusPriority;\n  });\n\n  return worstStatusPriority;\n};\n\nexport const getWorstStepResultStatus = (steps: StepResult[]): Status | undefined => {\n  const worstStatusPriority = getWorstStepResultStatusPriority(steps);\n\n  if (worstStatusPriority === undefined) {\n    return undefined;\n  }\n\n  return StatusByPriority[worstStatusPriority];\n};\n\nexport const readImageAsBase64 = async (filePath: string): Promise<string | undefined> => {\n  try {\n    const file = await readFile(filePath, { encoding: \"base64\" });\n\n    return file ? `data:image/png;base64,${file}` : undefined;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst getProjectRoot = (() => {\n  let cachedProjectRoot: string | null = null;\n\n  const resolveProjectRootByPath = () => {\n    const cwd = process.cwd();\n    let nextDir = cwd;\n    let dir;\n\n    do {\n      dir = nextDir;\n      try {\n        fs.accessSync(path.join(dir, \"package.json\"), fs.constants.F_OK);\n\n        // package.json exists; use the directory as the project root\n        return dir;\n      } catch {}\n\n      nextDir = path.dirname(dir);\n    } while (nextDir.length < dir.length);\n\n    // package.json doesn't exist in any parent; fall back to CWD\n    return cwd;\n  };\n\n  return () => {\n    if (!cachedProjectRoot) {\n      cachedProjectRoot = resolveProjectRootByPath();\n    }\n    return cachedProjectRoot;\n  };\n})();\n\nexport const getRelativePath = (filepath: string) => {\n  if (path.isAbsolute(filepath)) {\n    const projectRoot = getProjectRoot();\n    filepath = path.relative(projectRoot, filepath);\n  }\n  return filepath;\n};\n\nexport const getPackageLabelFromPath = (filepath: string): Label => ({\n  name: LabelName.PACKAGE,\n  value: getRelativePath(filepath)\n    .split(path.sep)\n    .filter((v) => v)\n    .join(\".\"),\n});\n\nexport const deepClone = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nexport const serialize = (val: unknown): string => {\n  if (typeof val === \"object\" && !(val instanceof Map || val instanceof Set)) {\n    return JSON.stringify(val);\n  }\n\n  if (val === undefined) {\n    return \"undefined\";\n  }\n\n  return (val as any).toString();\n};\n\nexport const getSuiteLabels = (suites: readonly string[]): Label[] => {\n  if (suites.length === 0) {\n    return [];\n  }\n\n  const [parentSuite, suite, ...subSuites] = suites;\n  const labels: Label[] = [];\n\n  if (parentSuite) {\n    labels.push({\n      name: LabelName.PARENT_SUITE,\n      value: parentSuite,\n    });\n  }\n\n  if (suite) {\n    labels.push({\n      name: LabelName.SUITE,\n      value: suite,\n    });\n  }\n\n  if (subSuites.length > 0) {\n    labels.push({\n      name: LabelName.SUB_SUITE,\n      value: subSuites.join(\" > \"),\n    });\n  }\n\n  return labels;\n};\n\nconst suiteLabelNames: readonly string[] = [LabelName.PARENT_SUITE, LabelName.SUITE, LabelName.SUB_SUITE];\n\nexport const ensureSuiteLabels = (test: Partial<TestResult>, defaultSuites: readonly string[]) => {\n  if (!test.labels?.find((l) => suiteLabelNames.includes(l.name))) {\n    test.labels = [...(test.labels ?? []), ...getSuiteLabels(defaultSuites)];\n  }\n};\n\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n  reHasRegExpChar = RegExp(reRegExpChar.source);\n\nexport const escapeRegExp = (value: string): string => {\n  return reHasRegExpChar.test(value) ? value.replace(reRegExpChar, \"\\\\$&\") : value;\n};\n\nexport const parseProperties = properties.parse;\nexport const stringifyProperties = (data: any): string => properties.stringify(data, { unicode: true }).toString();\n\n// TODO: may also use URL.canParse instead (requires node.js v18.17, v19.9, or higher)\nconst isUrl = (potentialUrl: string) => {\n  // Short-circuits the check for many short URL cases, bypassing the try-catch logic.\n  if (potentialUrl.indexOf(\":\") === -1) {\n    return false;\n  }\n\n  // There is ':' in the string: a potential scheme separator.\n  // The string might be a proper URL already.\n  try {\n    new URL(potentialUrl);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const applyLinkTemplate = (template: LinkTemplate, value: string) =>\n  typeof template === \"string\" ? template.replace(\"%s\", value) : template(value);\n\nexport const formatLink = (templates: LinkConfig, link: Link) => {\n  const { url: originalUrl, name, type } = link;\n  if (isUrl(originalUrl)) {\n    return link;\n  } else {\n    const formattedLink = { ...link };\n    const { urlTemplate, nameTemplate } = templates[type ?? LinkType.DEFAULT] ?? {};\n    if (urlTemplate !== undefined) {\n      formattedLink.url = applyLinkTemplate(urlTemplate, originalUrl);\n    }\n    if (name === undefined && nameTemplate !== undefined) {\n      formattedLink.name = applyLinkTemplate(nameTemplate, originalUrl);\n    }\n    return formattedLink;\n  }\n};\n\nexport const formatLinks = (templates: LinkConfig, links: readonly Link[]) =>\n  links.map((link) => formatLink(templates, link));\n"],"mappings":"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","ignoreList":[]}