{"version":3,"file":"utils.js","names":["LabelName","Status","getStatusFromError","error","test","constructor","name","message","FAILED","BROKEN","ansiRegex","onlyFirst","arguments","length","undefined","pattern","join","RegExp","stripAnsi","str","regex","replace","getMessageAndTraceFromError","stack","trace","allureIdRegexp","_wrapRegExp","id","allureIdRegexpGlobal","allureLabelRegexp","value","allureLabelRegexpGlobal","extractMetadataFromString","title","labels","split","forEach","val","_val$match","idValue","match","groups","push","ALLURE_ID","labelMatch","cleanTitle","trim","isAnyStepFailed","item","isFailed","status","steps","find","step","isAllStepsEnded","every","stop","hasLabel","testResult","labelName","l","hasStepMessage","messages","some","type","getStepsMessagesPair","reduce","acc","unfinishedStepIdx","findLastIndex","getUnfinishedStepsMessages","grouppedStepsMessage","filter","isPromise","obj","then"],"sources":["../../../src/sdk/utils.ts"],"sourcesContent":["import type { FixtureResult, Label, StatusDetails, StepResult, TestResult } from \"../model.js\";\nimport { LabelName, Status } from \"../model.js\";\nimport type { RuntimeMessage } from \"./types.js\";\n\nexport const getStatusFromError = (error: Error): Status => {\n  switch (true) {\n    /**\n     * Native `node:assert` and `chai` (`vitest` uses it under the hood) throw `AssertionError`\n     * `jest` throws `JestAssertionError` instance\n     * `jasmine` throws `ExpectationFailed` instance\n     */\n    case /assert/gi.test(error.constructor.name):\n    case /expectation/gi.test(error.constructor.name):\n    case /assert/gi.test(error.name):\n    case /assert/gi.test(error.message):\n      return Status.FAILED;\n    default:\n      return Status.BROKEN;\n  }\n};\n\n/**\n * Source: https://github.com/chalk/ansi-regex\n */\nconst ansiRegex = ({ onlyFirst = false } = {}) => {\n  const pattern = [\n    \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n    \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\",\n  ].join(\"|\");\n\n  return new RegExp(pattern, onlyFirst ? undefined : \"g\");\n};\n\n/**\n * https://github.com/chalk/strip-ansi\n */\nexport const stripAnsi = (str: string): string => {\n  const regex = ansiRegex();\n  return str.replace(regex, \"\");\n};\n\nexport const getMessageAndTraceFromError = (\n  error: Error | { message?: string; stack?: string },\n): Pick<StatusDetails, \"message\" | \"trace\"> => {\n  const { message, stack } = error;\n  return {\n    message: message ? stripAnsi(message) : undefined,\n    trace: stack ? stripAnsi(stack) : undefined,\n  };\n};\n\nexport const allureIdRegexp = /(?:^|\\s)@?allure\\.id[:=](?<id>[^\\s]+)/;\nexport const allureIdRegexpGlobal = new RegExp(allureIdRegexp, \"g\");\nexport const allureLabelRegexp = /(?:^|\\s)@?allure\\.label\\.(?<name>[^:=\\s]+)[:=](?<value>[^\\s]+)/;\nexport const allureLabelRegexpGlobal = new RegExp(allureLabelRegexp, \"g\");\n\nexport const extractMetadataFromString = (\n  title: string,\n): {\n  labels: Label[];\n  cleanTitle: string;\n} => {\n  const labels = [] as Label[];\n\n  title.split(\" \").forEach((val) => {\n    const idValue = val.match(allureIdRegexp)?.groups?.id;\n\n    if (idValue) {\n      labels.push({ name: LabelName.ALLURE_ID, value: idValue });\n    }\n\n    const labelMatch = val.match(allureLabelRegexp);\n    const { name, value } = labelMatch?.groups || {};\n\n    if (name && value) {\n      labels?.push({ name, value });\n    }\n  });\n\n  const cleanTitle = title.replace(allureLabelRegexpGlobal, \"\").replace(allureIdRegexpGlobal, \"\").trim();\n\n  return { labels, cleanTitle };\n};\n\nexport const isAnyStepFailed = (item: StepResult | TestResult | FixtureResult): boolean => {\n  const isFailed = item.status === Status.FAILED;\n\n  if (isFailed || item.steps.length === 0) {\n    return isFailed;\n  }\n\n  return !!item.steps.find((step) => isAnyStepFailed(step));\n};\n\nexport const isAllStepsEnded = (item: StepResult | TestResult | FixtureResult): boolean => {\n  return item.steps.every((val) => val.stop && isAllStepsEnded(val));\n};\n\nexport const hasLabel = (testResult: TestResult, labelName: LabelName | string): boolean => {\n  return !!testResult.labels.find((l) => l.name === labelName);\n};\n\nexport const hasStepMessage = (messages: RuntimeMessage[]) => {\n  return messages.some((message) => message.type === \"step_start\" || message.type === \"step_stop\");\n};\n\nexport const getStepsMessagesPair = (messages: RuntimeMessage[]) =>\n  messages.reduce((acc, message) => {\n    if (message.type !== \"step_start\" && message.type !== \"step_stop\") {\n      return acc;\n    }\n\n    if (message.type === \"step_start\") {\n      acc.push([message]);\n\n      return acc;\n    }\n\n    const unfinishedStepIdx = acc.findLastIndex((step) => step.length === 1);\n\n    if (unfinishedStepIdx === -1) {\n      return acc;\n    }\n\n    acc[unfinishedStepIdx].push(message);\n\n    return acc;\n  }, [] as RuntimeMessage[][]);\n\nexport const getUnfinishedStepsMessages = (messages: RuntimeMessage[]) => {\n  const grouppedStepsMessage = getStepsMessagesPair(messages);\n\n  return grouppedStepsMessage.filter((step) => step.length === 1);\n};\n\nexport const isPromise = <T = any>(obj: any): obj is PromiseLike<T> =>\n  !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n"],"mappings":"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","ignoreList":[]}